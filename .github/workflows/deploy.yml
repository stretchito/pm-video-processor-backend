name: Deploy to DigitalOcean

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: 18

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Create env file
        run: |
          touch .env
          echo "PORT=10000" >> .env
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env
          echo "SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" >> .env
          echo "NODE_ENV=production" >> .env
        
      - name: Build Application
        run: npm run build

      - name: Debug SSH Setup
        run: |
          mkdir -p ~/.ssh
          echo "Setting up SSH key..."
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ls -la ~/.ssh/deploy_key
          echo "Adding host key..."
          ssh-keyscan -v -H 161.35.137.136 >> ~/.ssh/known_hosts
          echo "SSH directory contents:"
          ls -la ~/.ssh/

      - name: Test SSH Connection
        run: |
          echo "Testing SSH connection..."
          ssh -v -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no nodejs@161.35.137.136 'echo "SSH connection successful"'

      - name: Deploy to DigitalOcean
        run: |
          echo "Starting rsync..."
          rsync -azv --delete \
            -e "ssh -v -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no" \
            --exclude='.git*' \
            --exclude='node_modules' \
            --exclude='.env' \
            dist/ package*.json ecosystem.config.js \
            nodejs@161.35.137.136:/var/www/video-processor/

          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no nodejs@161.35.137.136 << 'EOSSH'
            cd /var/www/video-processor
            npm ci --production
            pm2 reload ecosystem.config.js --update-env || pm2 start ecosystem.config.js
            sudo systemctl reload nginx
          EOSSH

      - name: Verify Deployment
        run: |
          sleep 10
          curl --fail --retry 3 --retry-delay 5 http://161.35.137.136:10000 || exit 1

      - name: Notify on Success
        if: success()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack-message: "✅ Successfully deployed video-processor to production"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Notify on Failure
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack-message: "❌ Failed to deploy video-processor to production"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}