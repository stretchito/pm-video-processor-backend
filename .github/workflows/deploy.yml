- name: Deploy to DigitalOcean
        run: |
          # First, ensure the target directory exists
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no nodejs@161.35.137.136 << 'EOSSH'
            echo "Creating directories and setting permissions..."
            sudo mkdir -p /var/www/video-processor
            sudo chown -R nodejs:nodejs /var/www/video-processor
            mkdir -p /var/www/video-processor/logs
            chmod 777 /var/www/video-processor/logs
            
            # Create empty log files if they don't exist
            touch /var/www/video-processor/logs/combined.log
            touch /var/www/video-processor/logs/error.log
            touch /var/www/video-processor/logs/output.log
            chmod 666 /var/www/video-processor/logs/*.log
            
            echo "Current directory structure:"
            ls -la /var/www/video-processor/
            ls -la /var/www/video-processor/logs/
          EOSSH
          
          echo "Syncing files..."
          # Sync files
          rsync -azv --delete \
            -e "ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no" \
            --exclude='.git*' \
            --exclude='node_modules' \
            --exclude='src' \
            --exclude='.env' \
            ./ \
            nodejs@161.35.137.136:/var/www/video-processor/

          # Setup and start application
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no nodejs@161.35.137.136 << 'EOSSH'
            cd /var/www/video-processor
            
            echo "Setting up environment..."
            export NODE_ENV=production
            export DEBUG=express:*,app:*,video-processor:*
            
            echo "Checking Node.js installation..."
            node --version
            npm --version
            
            echo "Installing production dependencies..."
            npm ci --omit=dev
            
            echo "Setting up PM2..."
            sudo npm install pm2@latest -g
            
            echo "Verifying files..."
            echo "Package.json:"
            cat package.json
            echo "Ecosystem config:"
            cat ecosystem.config.js
            echo "Dist directory:"
            ls -la dist/
            
            echo "Setting up directories and permissions..."
            mkdir -p logs .pm2
            chmod 777 logs .pm2
            sudo chown -R nodejs:nodejs .
            
            echo "Starting application with PM2..."
            export PM2_HOME="/var/www/video-processor/.pm2"
            
            # Stop existing processes
            pm2 delete all || true
            
            echo "PM2 processes before start:"
            pm2 list
            
            # Start with full logging
            echo "Starting PM2..."
            pm2 start ecosystem.config.js \
              --time \
              --log logs/combined.log \
              --error logs/error.log \
              --output logs/output.log || {
                echo "PM2 start failed. Checking logs:"
                cat logs/*.log
                exit 1
              }
            
            echo "PM2 processes after start:"
            pm2 list
            
            echo "Process status:"
            ps aux | grep node
            
            echo "Port status:"
            sudo lsof -i :10000 || true
            
            echo "Log contents:"
            for f in logs/*.log; do
              echo "=== $f ==="
              cat "$f" || echo "No content in $f"
            done
            
            echo "Saving PM2 process list..."
            pm2 save || true
          EOSSH